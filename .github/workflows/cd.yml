name: 'ETL - SQL - DAGs'

on:
    push:
        branches:
            - "main"
            - "prd"
            - "uat"
            - "dev"

env:
  PROJECT_ID: ${{ vars.PROJECT_ID }}
  PROJECT_NUMBER: ${{ vars.PROJECT_NUMBER }}
  REGION: ${{ vars.REGION}}
  SERVICE_ACCOUNT_RUNTIME: ${{ vars.SERVICE_ACCOUNT_RUNTIME }}
  SERVICE_ACCOUNT_GH: ${{ vars.SERVICE_ACCOUNT_GH }}
  POOL_PROVIDER: ${{ vars.POOL_PROVIDER }} # github-provider
  INITIATIVE: ${{ vars.INITIATIVE }}

jobs:
  etl:
    environment: dev
    runs-on: ubuntu-latest
    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout code repository
      uses: 'actions/checkout@v4'

    - name: Authentication to Google Cloud Platform
      uses: 'google-github-actions/auth@v2'
      with:
        token_format: access_token
        workload_identity_provider: 'projects/${{ env.PROJECT_NUMBER }}/locations/global/workloadIdentityPools/github/providers/github-provider'
        service_account: ${{ env.SERVICE_ACCOUNT_GH }}
        access_token_lifetime: 300s

    - name: Deploy Cloud Function
      run: |
        gcloud functions deploy etl-${{ env.INITIATIVE }} \
        --gen2 \
        --region=${{ env.REGION }} \
        --runtime=python310 \
        --memory=1G \
        --source=cloud_function_etl \
        --trigger-http \
        --entry-point=extract_transform_load \
        --no-allow-unauthenticated \
        --ingress-settings=internal-only \
        --log-http \
        --run-service-account=${{ env.SERVICE_ACCOUNT_RUNTIME }} \
        --build-service-account=projects/${{ env.PROJECT_ID }}/serviceAccounts/${{ env.SERVICE_ACCOUNT_GH }}

  sql:
    environment: dev
    runs-on: ubuntu-latest
    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout code repository
      uses: 'actions/checkout@v4'

    - name: Authentication to Google Cloud Platform
      uses: 'google-github-actions/auth@v2'
      with:
        token_format: access_token
        workload_identity_provider: 'projects/${{ env.PROJECT_NUMBER }}/locations/global/workloadIdentityPools/github/providers/${{ env.POOL_PROVIDER }}'
        service_account: ${{ env.SERVICE_ACCOUNT_GH }}
        access_token_lifetime: 300s

    - name: Deploy Cloud Function
      run: |
        gcloud functions deploy sql-${{ env.INITIATIVE }} \
        --gen2 \
        --region=${{ env.REGION }} \
        --runtime=python310 \
        --memory=1G \
        --source=cloud_function_sql \
        --trigger-http \
        --entry-point=process \
        --no-allow-unauthenticated \
        --ingress-settings=internal-only \
        --log-http \
        --run-service-account=${{ env.SERVICE_ACCOUNT_RUNTIME }} \
        --build-service-account=projects/${{ env.PROJECT_ID }}/serviceAccounts/${{ env.SERVICE_ACCOUNT_GH }}

  airflow:
      environment: dev
      runs-on: ubuntu-latest
      # Add "id-token" with the intended permissions.
      permissions:
        contents: 'read'
        id-token: 'write'

      steps:
      - name: Checkout code repository
        uses: 'actions/checkout@v4'

      - name: Authentication to Google Cloud Platform
        uses: 'google-github-actions/auth@v2'
        with:
          token_format: access_token
          workload_identity_provider: 'projects/${{ env.PROJECT_NUMBER }}/locations/global/workloadIdentityPools/github/providers/${{ env.POOL_PROVIDER }}'
          service_account: ${{ env.SERVICE_ACCOUNT_GH }}
          access_token_lifetime: 300s

      - name: Update Airflow Dags in Google Cloud Storage Bucket
        run: |
          gsutil rsync -r dags/ gs://europe-west6-composer-5ebfbd97-bucket/dags/